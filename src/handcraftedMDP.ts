// Generated by ../levels/combiner.py
import { Graph } from "./GDM-TS";
import {CustomNode } from "./customNode";
import { KEY_DEATH, KEY_END, KEY_START } from "./constants";

// ========= Nodes =========
export const HAND_MDP = new Graph();

HAND_MDP.addNode(new CustomNode(KEY_START, 0, 0, false, [], [], -1));
HAND_MDP.addNode(new CustomNode(KEY_DEATH, -1, 0, true, [], [], -1));
HAND_MDP.addNode(new CustomNode("idk-0", -1.5, 0, false, [], ["XX----------XXX", "XX----------XXX", "XX---XX-----XXX", "XX-#-XXXX---XXX", "XX-----XX---&--", "XXXX---XX------", "XXXX---XX-----#", "XXXX--#XX---XXX", "XXXX---XX---XXX", "-------XX---XXX", "&------XX---XXX"],11));
HAND_MDP.addNode(new CustomNode("s-0", -2.8, 0, false, [], ["-------------", "-------------", "-------------", "-------------", "-----*-------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------"],1));
HAND_MDP.addNode(new CustomNode("s-1", -2.8, 0, false, [], ["-------------", "---------*---", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------"],1));
HAND_MDP.addNode(new CustomNode("s-2", -2.8, 0, false, [], ["-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "---------*---", "-------------", "-------------", "-------------"],1));
HAND_MDP.addNode(new CustomNode("end-0", -0.0, 0, true, [], ["----------", "*---------", "*---------", "*---------", "*---------", "*---------", "*---------", "*---------", "*---------", "*---------", "**********"],12));
HAND_MDP.addNode(new CustomNode("end-1", -0.0, 0, true, [], ["-------------", "*------------", "*------------", "*------------", "*------------", "*------------", "*------------", "*------------", "*------------", "*------------", "*************"],12));
HAND_MDP.addNode(new CustomNode("e-0", -2.7, 0, false, [], ["-----", "-----", "-----", "-----", "--#--", "-----", "-----", "-----", "-----", "-----", "-----"],2));
HAND_MDP.addNode(new CustomNode("e-1", -2.7, 0, false, [], ["-----", "-----", "-----", "-----", "-----", "-----", "--#--", "-----", "-----", "-----", "-----"],2));
HAND_MDP.addNode(new CustomNode("e-2", -2.7, 0, false, [], ["-----", "-----", "-----", "-----", "-----", "--#--", "-----", "-----", "-----", "-----", "-----"],2));
HAND_MDP.addNode(new CustomNode("e-3", -2.7, 0, false, [], ["-----", "-----", "-----", "-----", "-----", "-----", "-----", "-----", "--#--", "-----", "-----"],2));
HAND_MDP.addNode(new CustomNode("e2-0", -2.6, 0, false, [], ["--------", "--------", "--------", "--------", "--#-----", "--------", "--------", "--------", "---#----", "--------", "--------"],3));
HAND_MDP.addNode(new CustomNode("e2-1", -2.6, 0, false, [], ["--------", "--------", "--------", "--------", "---#----", "--------", "--#-----", "--------", "--------", "--------", "--------"],3));
HAND_MDP.addNode(new CustomNode("e2-2", -2.6, 0, false, [], ["--------", "--------", "-----#--", "--------", "--------", "--#-----", "--------", "--------", "--------", "--------", "--------"],3));
HAND_MDP.addNode(new CustomNode("e2-3", -2.6, 0, false, [], ["--------", "-----#--", "--------", "--------", "--------", "--------", "--------", "--------", "--#-----", "--------", "--------"],3));
HAND_MDP.addNode(new CustomNode("e3-0", -2.5, 0, false, [], ["------", "------", "----#-", "------", "--#---", "------", "------", "------", "---#--", "------", "------"],4));
HAND_MDP.addNode(new CustomNode("e3-1", -2.5, 0, false, [], ["------", "----#-", "------", "------", "---#--", "------", "--#---", "------", "------", "------", "------"],4));
HAND_MDP.addNode(new CustomNode("e3-2", -2.5, 0, false, [], ["------", "----#-", "------", "------", "------", "--#---", "------", "---#--", "------", "------", "------"],4));
HAND_MDP.addNode(new CustomNode("e3-3", -2.5, 0, false, [], ["------", "--#---", "------", "------", "---#--", "------", "------", "------", "--#---", "------", "------"],4));
HAND_MDP.addNode(new CustomNode("f-0", -2.4, 0, false, [], ["---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "------------&--------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------"],5));
HAND_MDP.addNode(new CustomNode("f-1", -2.4, 0, false, [], ["---------------------", "---------------------", "------------&--------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------"],5));
HAND_MDP.addNode(new CustomNode("f-2", -2.4, 0, false, [], ["---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "-----------&---------", "---------------------", "---------------------"],5));
HAND_MDP.addNode(new CustomNode("f-3", -2.4, 0, false, [], ["---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "-------------&-------"],5));
HAND_MDP.addNode(new CustomNode("ld-f-0", -2.3, 0, false, [], ["-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-", "---------------", "---------------", "-------&-------", "-------#-------", "---------------", "---------------", "---------------", "-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-"],6));
HAND_MDP.addNode(new CustomNode("ld-f-1", -2.3, 0, false, [], ["-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-", "-------&-------", "---------------", "-------#-------", "---------------", "---------------", "---------------", "---------------", "-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-"],6));
HAND_MDP.addNode(new CustomNode("ld-f-2", -2.3, 0, false, [], ["-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-", "---------------", "---------------", "---------------", "---------------", "-------#-------", "---------------", "-------&-------", "-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-"],6));
HAND_MDP.addNode(new CustomNode("ld-s-0", -2.3, 0, false, [], ["-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-", "---------------", "---------------", "-------*-------", "-------#-------", "---------------", "---------------", "---------------", "-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-"],6));
HAND_MDP.addNode(new CustomNode("ld-s-1", -2.3, 0, false, [], ["-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-", "-------*-------", "---------------", "-------#-------", "---------------", "---------------", "---------------", "---------------", "-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-"],6));
HAND_MDP.addNode(new CustomNode("ld-s-2", -2.3, 0, false, [], ["-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-", "---------------", "---------------", "---------------", "---------------", "-------#-------", "---------------", "-------*-------", "-XXXXXXXXXXXXX-", "-XXXXXXXXXXXXX-"],6));
HAND_MDP.addNode(new CustomNode("sp-0", -1.0, 0, false, [], ["-^^^^^^^^-", "-^^^^^^^^-", "-^^^^^^^^-", "-^^^^^^^^-", "-^^^^^^^^-", "--------*-", "-^^^^^^^^-", "-^^^^^^^^-", "-^^^^^^^^-", "-^^^^^^^^-", "-^^^^^^^^-"],7));
HAND_MDP.addNode(new CustomNode("sp-1", -1.0, 0, false, [], ["-^^^^^^^^^-", "-^^^^^^^^^-", "-^^^^^^^^^-", "-^^^^^^^^^-", "-^^^^^^^^^-", "----*------", "-^^^^^^^^^-", "-^^^^^^^^^-", "-^^^^^^^^^-", "-^^^^^^^^^-", "-^^^^^^^^^-"],7));
HAND_MDP.addNode(new CustomNode("ps-e1-0", -1.0, 0, false, [], ["-----------------", "-----------------", "-----------------", "-----------------", "------XXX--------", "------X#*--------", "------XXX-----&--", "-----------------", "-----------------", "-----------------", "-----------------"],8));
HAND_MDP.addNode(new CustomNode("ps-e1-1", -1.0, 0, false, [], ["-----------------", "-----------------", "-----------------", "-----------------", "------XXX--------", "------*#X--------", "------XXX-----&--", "-----------------", "-----------------", "-----------------", "-----------------"],8));
HAND_MDP.addNode(new CustomNode("e3-s-0", -1.0, 0, false, [], ["-----------------", "-----#-----------", "-----------------", "------*----------", "--#-------#------", "-----------------", "--------------&--", "-----------------", "-----------------", "-----------------", "-----------------"],9));
HAND_MDP.addNode(new CustomNode("e3-s-1", -1.0, 0, false, [], ["-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----#--------&--", "----------#------", "-------*---------", "-----#-----------", "-----------------"],9));
HAND_MDP.addNode(new CustomNode("e2-s-0", -1.0, 0, false, [], ["-----------------", "-----#-----------", "-----------------", "------*----------", "----------#------", "-----------------", "--------------&--", "-----------------", "-----------------", "-----------------", "-----------------"],8));
HAND_MDP.addNode(new CustomNode("e2-s-1", -1.0, 0, false, [], ["-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----#--------&--", "----------#------", "-------*---------", "-----------------", "-----------------"],8));
HAND_MDP.addNode(new CustomNode("ps-e2-0", -1.0, 0, false, [], ["-----------------", "-----------------", "-----------------", "-----------------", "------XXX--------", "------X#*---#-----", "------XXX-----&--", "-----------------", "-----------------", "-----------------", "-----------------"],10));
HAND_MDP.addNode(new CustomNode("ps-e2-1", -1.0, 0, false, [], ["-----------------", "-----------------", "-----------------", "-----------------", "------XXX--------", "--#---*#X--------", "------XXX-----&--", "-----------------", "-----------------", "-----------------", "-----------------"],10));

// ========= Edges =========
HAND_MDP.addDefaultEdge("start", "s-0", [["s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("start", "s-1", [["s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("start", "s-2", [["s-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("idk-0", "end-0", [["end-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("idk-0", "end-1", [["end-1", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("s-0", "e-0", [["e-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-0", "e-1", [["e-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-0", "e-2", [["e-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-0", "e-3", [["e-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-1", "e-0", [["e-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-1", "e-1", [["e-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-1", "e-2", [["e-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-1", "e-3", [["e-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-2", "e-0", [["e-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-2", "e-1", [["e-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-2", "e-2", [["e-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("s-2", "e-3", [["e-3", 0.99], [KEY_DEATH, 0.01]]);


HAND_MDP.addDefaultEdge("e-0", "e2-0", [["e2-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-0", "e2-1", [["e2-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-0", "e2-2", [["e2-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-0", "e2-3", [["e2-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-1", "e2-0", [["e2-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-1", "e2-1", [["e2-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-1", "e2-2", [["e2-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-1", "e2-3", [["e2-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-2", "e2-0", [["e2-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-2", "e2-1", [["e2-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-2", "e2-2", [["e2-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-2", "e2-3", [["e2-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-3", "e2-0", [["e2-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-3", "e2-1", [["e2-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-3", "e2-2", [["e2-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e-3", "e2-3", [["e2-3", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("e2-0", "e3-0", [["e3-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-0", "e3-1", [["e3-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-0", "e3-2", [["e3-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-0", "e3-3", [["e3-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-1", "e3-0", [["e3-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-1", "e3-1", [["e3-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-1", "e3-2", [["e3-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-1", "e3-3", [["e3-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-2", "e3-0", [["e3-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-2", "e3-1", [["e3-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-2", "e3-2", [["e3-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-2", "e3-3", [["e3-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-3", "e3-0", [["e3-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-3", "e3-1", [["e3-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-3", "e3-2", [["e3-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-3", "e3-3", [["e3-3", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("e3-0", "f-0", [["f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-0", "f-1", [["f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-0", "f-2", [["f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-0", "f-3", [["f-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-1", "f-0", [["f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-1", "f-1", [["f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-1", "f-2", [["f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-1", "f-3", [["f-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-2", "f-0", [["f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-2", "f-1", [["f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-2", "f-2", [["f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-2", "f-3", [["f-3", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-3", "f-0", [["f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-3", "f-1", [["f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-3", "f-2", [["f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-3", "f-3", [["f-3", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("f-0", "ld-f-0", [["ld-f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-0", "ld-f-1", [["ld-f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-0", "ld-f-2", [["ld-f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-1", "ld-f-0", [["ld-f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-1", "ld-f-1", [["ld-f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-1", "ld-f-2", [["ld-f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-2", "ld-f-0", [["ld-f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-2", "ld-f-1", [["ld-f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-2", "ld-f-2", [["ld-f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-3", "ld-f-0", [["ld-f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-3", "ld-f-1", [["ld-f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-3", "ld-f-2", [["ld-f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-0", "ld-s-0", [["ld-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-0", "ld-s-1", [["ld-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-0", "ld-s-2", [["ld-s-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-1", "ld-s-0", [["ld-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-1", "ld-s-1", [["ld-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-1", "ld-s-2", [["ld-s-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-2", "ld-s-0", [["ld-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-2", "ld-s-1", [["ld-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-2", "ld-s-2", [["ld-s-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-3", "ld-s-0", [["ld-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-3", "ld-s-1", [["ld-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("f-3", "ld-s-2", [["ld-s-2", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("ld-f-0", "sp-0", [["sp-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-0", "sp-1", [["sp-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-1", "sp-0", [["sp-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-1", "sp-1", [["sp-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-2", "sp-0", [["sp-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-2", "sp-1", [["sp-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-0", "ld-s-0", [["ld-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-0", "ld-s-1", [["ld-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-0", "ld-s-2", [["ld-s-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-1", "ld-s-0", [["ld-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-1", "ld-s-1", [["ld-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-1", "ld-s-2", [["ld-s-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-2", "ld-s-0", [["ld-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-2", "ld-s-1", [["ld-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-f-2", "ld-s-2", [["ld-s-2", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("ld-s-0", "ld-f-0", [["ld-f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-0", "ld-f-1", [["ld-f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-0", "ld-f-2", [["ld-f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-1", "ld-f-0", [["ld-f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-1", "ld-f-1", [["ld-f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-1", "ld-f-2", [["ld-f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-2", "ld-f-0", [["ld-f-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-2", "ld-f-1", [["ld-f-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-2", "ld-f-2", [["ld-f-2", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-0", "sp-0", [["sp-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-0", "sp-1", [["sp-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-1", "sp-0", [["sp-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-1", "sp-1", [["sp-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-2", "sp-0", [["sp-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ld-s-2", "sp-1", [["sp-1", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("sp-0", "e2-s-0", [["e2-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("sp-0", "e2-s-1", [["e2-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("sp-1", "e2-s-0", [["e2-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("sp-1", "e2-s-1", [["e2-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("sp-0", "ps-e1-0", [["ps-e1-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("sp-0", "ps-e1-1", [["ps-e1-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("sp-1", "ps-e1-0", [["ps-e1-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("sp-1", "ps-e1-1", [["ps-e1-1", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("ps-e1-0", "e3-s-0", [["e3-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e1-0", "e3-s-1", [["e3-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e1-1", "e3-s-0", [["e3-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e1-1", "e3-s-1", [["e3-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e1-0", "e2-s-0", [["e2-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e1-0", "e2-s-1", [["e2-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e1-1", "e2-s-0", [["e2-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e1-1", "e2-s-1", [["e2-s-1", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("e3-s-0", "ps-e2-0", [["ps-e2-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-s-0", "ps-e2-1", [["ps-e2-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-s-1", "ps-e2-0", [["ps-e2-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e3-s-1", "ps-e2-1", [["ps-e2-1", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("e2-s-0", "ps-e2-0", [["ps-e2-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-s-0", "ps-e2-1", [["ps-e2-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-s-1", "ps-e2-0", [["ps-e2-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-s-1", "ps-e2-1", [["ps-e2-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-s-0", "ps-e1-0", [["ps-e1-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-s-0", "ps-e1-1", [["ps-e1-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-s-1", "ps-e1-0", [["ps-e1-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("e2-s-1", "ps-e1-1", [["ps-e1-1", 0.99], [KEY_DEATH, 0.01]]);

HAND_MDP.addDefaultEdge("ps-e2-0", "e3-s-0", [["e3-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e2-0", "e3-s-1", [["e3-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e2-1", "e3-s-0", [["e3-s-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e2-1", "e3-s-1", [["e3-s-1", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e2-0", "idk-0", [["idk-0", 0.99], [KEY_DEATH, 0.01]]);
HAND_MDP.addDefaultEdge("ps-e2-1", "idk-0", [["idk-0", 0.99], [KEY_DEATH, 0.01]]);

